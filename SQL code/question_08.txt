question_8
-- Create database
CREATE DATABASE company_management;

-- Use the created database
USE company_management;

-- Create Employee table
CREATE TABLE Employee (
    emp_no INT PRIMARY KEY,
    name VARCHAR(255),
    skill INT,
    pay_rate DECIMAL(10, 2)
);

-- Create Position table
CREATE TABLE Position (
    posting_no INT PRIMARY KEY,
    skill INT
);

-- Create Duty_Allocation table
CREATE TABLE Duty_Allocation (
    posting_no INT,
    emp_no INT,
    day DATE,
    shift INT,
    FOREIGN KEY (posting_no) REFERENCES Position(posting_no),
    FOREIGN KEY (emp_no) REFERENCES Employee(emp_no)
);

-- Insert data into Employee table
INSERT INTO Employee VALUES (123461, 'John', 6, 20.00);
INSERT INTO Employee VALUES (123462, 'Alice', 5, 18.00);
 

-- Insert data into Position table
INSERT INTO Position VALUES (1, 6);
INSERT INTO Position VALUES (2, 5);
 

-- Insert data into Duty_Allocation table
INSERT INTO Duty_Allocation VALUES (1, 123461, '1986-04-01', 1);
INSERT INTO Duty_Allocation VALUES (1, 123461, '1986-04-15', 2);


1.	Get the duty allocation details for emp_no 123461 for the month of April 1986.
SELECT * FROM Duty_Allocation WHERE emp_no = 123461 AND MONTH(day) = 4 AND YEAR(day) = 1986;

2.	Find the shift details for Employee ‘xyz’
SELECT day, shift FROM Duty_Allocation WHERE emp_no = (SELECT emp_no FROM Employee WHERE name = 'xyz');

3.	Get employees whose rate of pay is more than or equal to the rate of pay of employee ‘xyz’
SELECT * FROM Employee WHERE pay_rate >= (SELECT pay_rate FROM Employee WHERE name = 'xyz');

4.	Get the names and pay rates of employees with emp_no less than 123460 whose rate of pay is more than the rate of pay of at least one employee with emp_no greater than or equal to 123460.
SELECT name, pay_rate FROM Employee WHERE emp_no < 123460 AND pay_rate > (SELECT MAX(pay_rate) FROM Employee WHERE emp_no >= 123460);

5.	Find the names of employees who are assigned to all positions that require a Chef’s skill
SELECT e.name
FROM Employee e
WHERE NOT EXISTS (
    SELECT p.posting_no
    FROM Position p
    WHERE p.skill = 6
    EXCEPT
    SELECT da.posting_no
    FROM Duty_Allocation da
    WHERE da.emp_no = e.emp_no
);

6 .Find the employees with the lowest pay rate
SELECT * FROM Employee WHERE pay_rate = (SELECT MIN(pay_rate) FROM Employee);

7	.Get the employee numbers of all employees working on at least two dates.
SELECT emp_no
FROM Duty_Allocation
GROUP BY emp_no
HAVING COUNT(DISTINCT day) >= 2;

8	.Get a list of names of employees with the skill of Chef who are assigned a duty 
SELECT e.name
FROM Employee e
JOIN Duty_Allocation da ON e.emp_no = da.emp_no
WHERE e.skill = 6;

9 .Get a list of employees not assigned a duty
SELECT e.name
FROM Employee e
WHERE NOT EXISTS (
    SELECT 1
    FROM Duty_Allocation da
    WHERE da.emp_no = e.emp_no
);

10 .Get a count of different employees on each shift
SELECT shift, COUNT(DISTINCT emp_no) as employee_count
FROM Duty_Allocation
GROUP BY shift;



question  21
we have to solve questions the mongo question please solve the queries and also suggest what question can teachers ask related to that question

MongoDB Create following Collections
Teachers(Tname,dno,dname,experience,salary,date_of_joining ) Students(Sname,roll_no,class)





and here are questions also give the output of each query
Solve Queries by mongodb

1.	Find the information about all teachers
    db.Teachers.find({});

2.	Find the average salary teachers of computer department
db.Teachers.aggregate([
  { $match: { dname: "Computer" } },
  { $group: { _id: null, averageSalary: { $avg: "$salary" } } }
]);
3.	Find the minimum and maximum salary of e&TC department teachers
db.Teachers.aggregate([
  { $match: { dname: "E&TC" } },
  { $group: { _id: null, minSalary: { $min: "$salary" }, maxSalary: { $max: "$salary" } } }
]);

4.	Find the information about all teachers of computer,IT,and E&TC department having salary greate than or equl to 10000/-
db.Teachers.find({
  dname: { $in: ["Computer", "IT", "E&TC"] },
  salary: { $gte: 10000 }
});

5.	Find the student information having roll_no = 2 or Sname=xyz
db.Students.find({ $or: [{ roll_no: 2 }, { Sname: "xyz" }] });

6.	Update the experience of teacher-praveen to 10years, if the entry is not available in database consider the entry as new entry.
db.Teachers.update(
  { Tname: "Praveen" },
  { $set: { experience: 10, dno: "104", dname: "New Department", salary: 15000, date_of_joining: new Date() } },
  { upsert: true }
);

7.	Update the deparment of all the teachers working in IT deprtment to COMP
db.Teachers.updateMany({ dname: "IT" }, { $set: { dname: "COMP" } });

8.	find the teachers name and their experience from teachers collection
db.Teachers.find({}, { Tname: 1, experience: 1, _id: 0 });

9.	Using Save() method insert one entry in department collection
db.Department.save({ dno: "105", dname: "New Department" });

10.	Find the total salary all teachers.
db.Teachers.aggregate([
  { $group: { _id: null, totalSalary: { $sum: "$salary" } } }
]);

    // Create Teachers and Students collections
db.createCollection("Teachers");
db.createCollection("Students");

// Insert sample data into Teachers collection
db.Teachers.insertMany([
  {
    Tname: "John",
    dno: "101",
    dname: "Computer",
    experience: 5,
    salary: 12000,
    date_of_joining: new Date("2020-01-15")
  },
  {
    Tname: "Alice",
    dno: "102",
    dname: "E&TC",
    experience: 7,
    salary: 13000,
    date_of_joining: new Date("2018-05-20")
  },
  {
    Tname: "Bob",
    dno: "103",
    dname: "IT",
    experience: 4,
    salary: 11000,
    date_of_joining: new Date("2019-08-10")
  }
]);

// Insert sample data into Students collection
db.Students.insertMany([
  { Sname: "Alice", roll_no: 1, class: "X" },
  { Sname: "Bob", roll_no: 2, class: "XI" },
  { Sname: "xyz", roll_no: 3, class: "XII" }
]);
